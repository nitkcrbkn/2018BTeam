#ifndef __APP_H
#define __APP_H

/*NO Device mode*/
#define _NO_DEVICE 0

/*NO Device mode*/
#define _NO_DEVICE 0

#define DD_NUM_OF_SS 1
#define DD_NUM_OF_MD 4
#define DD_NUM_OF_AB 0
#define DD_NUM_OF_SV 0
#define DD_USE_RC 0


#include "DD_RC.h"
#include "DD_MD.h"
#include "DD_SV.h"
#include "DD_SS.h"
int appTask(void);
int appInit(void);

//装填用モータ
#define MECHA1_MD0 0

//土台用モータ
#define MECHA1_MD1 1

//巻取り用モータ
#define MECHA1_MD2 2
/* リリース用モータ */
#define MECHA1_MD3 3
 
#define CENTRAL_THRESHOLD 0

#define MD_GAIN (DD_MD_MAX_DUTY  / DD_RC_ANALOG_MAX / 2 )


//エンコーダ
#define DD_USE_ENCODER1 1
#define DD_USE_ENCODER2 1


#define ARM_PULL_DUTY 7000//app.cで-をつけてある
#define LOAD_DUTY 5500//app.cで-をつけてある
#define THROW_DUTY 8000
#define FIRE_DUTY 5000


//ポジション0の場合
#define FIRST_FIRE_ANGLE_1 -2100
#define FIRST_PULL_SPRING_1 -3200

#define SECOND_FIRE_ANGLE_1 -3211
#define SECOND_PULL_SPRING_1 -5600

#define THIRD_FIRE_ANGLE_1 -3211
#define THIRD_PULL_SPRING_1 -5600

#define FOURTH_FIRE_ANGLE_1 -3211
#define FOURTH_PULL_SPRING_1 -5600

#define FIFTH_FIRE_ANGLE_1 -3211
#define FIFTH_PULL_SPRING_1 -5600

#define SIXTH_FIRE_ANGLE_1 -3211
#define SIXTH_PULL_SPRING_1 -5600

#define SEVENTH_FIRE_ANGLE_1 -3211
#define SEVENTH_PULL_SPRING_1 -5600

#define EIGHTH_FIRE_ANGLE_1 -3211
#define EIGHTH_PULL_SPRING_1 -5600

#define NINETH_FIRE_ANGLE_1 -3211
#define NINETH_PULL_SPRING_1 -5600

#define TENTH_FIRE_ANGLE_1 -3211
#define TENTH_PULL_SPRING_1 -5600



//ポジション1の場合
#define FIRST_FIRE_ANGLE_2 2100
#define FIRST_PULL_SPRING_2 -3200

#define SECOND_FIRE_ANGLE_2 3211
#define SECOND_PULL_SPRING_2 -5600

#define THIRD_FIRE_ANGLE_2 3211
#define THIRD_PULL_SPRING_2 -5600

#define FOURTH_FIRE_ANGLE_2 3211
#define FOURTH_PULL_SPRING_2 -5600

#define FIFTH_FIRE_ANGLE_2 3211
#define FIFTH_PULL_SPRING_2 -5600

#define SIXTH_FIRE_ANGLE_2 3211
#define SIXTH_PULL_SPRING_2 -5600

#define SEVENTH_FIRE_ANGLE_2 3211
#define SEVENTH_PULL_SPRING_2 -5600

#define EIGHTH_FIRE_ANGLE_2 3211
#define EIGHTH_PULL_SPRING_2 -5600

#define NINETH_FIRE_ANGLE_2 3211
#define NINETH_PULL_SPRING_2 -5600

#define TENTH_FIRE_ANGLE_2 3211
#define TENTH_PULL_SPRING_2 -5600


#define LOADING_VAL 700//四角のエンコーダは650
#define LOADING_SUPPORT 100
#define LOAD_MAX -5000


#define DEFAULT_PULL_SPRING 0
#define DEFAULT_ANGLE1 1000

//#define ZERO_ANGLE 500
#define ANGLE_MARGIN 300
#define PULL_UP_MARGIN 0
#define ZERO_ANGLE 0

#define HORIZONTAL -10700
#define DEFAULT_LOAD -500

//打つボトルの総数
#define BOTTLE_COUNT 10
#define THROW_DEFAULT 80
#define RELEASE_VAL 220

//カウント変数
#define THROW_COUNT 13
#define FIRE_WAIT 80
#define THROW_WAIT 50
#define AUTO_WAIT 50
#define MAN_LOAD_WAIT 300
#define LOAD_MAN_TURN 4

#define PULL_COUNT 80 // 40



//フォトインタラプタ
#define _SW_LOAD_PHOTO_GPIOxID GPIOBID
#define _SW_LOAD_PHOTO_GPIOPIN GPIO_PIN_15
#define _IS_PRESSED_LOAD_PHOTO() ((MW_GPIORead(_SW_LOAD_PHOTO_GPIOxID,_SW_LOAD_PHOTO_GPIOPIN)))

#define _SW_POSITION_TOGLE_GPIOxID GPIOBID
#define _SW_POSITION_TOGLE_GPIOPIN GPIO_PIN_14
#define _IS_PRESSED_POSITION_TOGLE() ((MW_GPIORead(_SW_POSITION_TOGLE_GPIOxID,_SW_POSITION_TOGLE_GPIOPIN)))

#define _SW_MANLOAD_TOGLE_GPIOxID GPIOBID
#define _SW_MANLOAD_TOGLE_GPIOPIN GPIO_PIN_13
#define _IS_PRESSED_MANLOAD_TOGLE() ((MW_GPIORead(_SW_MANLOAD_TOGLE_GPIOxID,_SW_MANLOAD_TOGLE_GPIOPIN)))

#define _SW_0LIMIT_PHOTO_GPIOxID GPIOAID
#define _SW_0LIMIT_PHOTO_GPIOPIN GPIO_PIN_11
#define _IS_PRESSED_0LIMIT_PHOTO() ((MW_GPIORead(_SW_0LIMIT_PHOTO_GPIOxID,_SW_0LIMIT_PHOTO_GPIOPIN)))

#define _SW_MAXLIMIT_PHOTO_GPIOxID GPIOBID
#define _SW_MAXLIMIT_PHOTO_GPIOPIN GPIO_PIN_12
#define _IS_PRESSED_MAXLIMIT_PHOTO() ((MW_GPIORead(_SW_MAXLIMIT_PHOTO_GPIOxID,_SW_MAXLIMIT_PHOTO_GPIOPIN)))

typedef enum{
  GET_ENCODER_VALUE = 0,
  RESET_ENCODER_VALUE = 1,
}EncoderOperation_t;

#define I2C_ENCODER_1 0

#endif
